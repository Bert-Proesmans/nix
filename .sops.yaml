# Configuration file for SOPS
# REF; https://github.com/getsops/sops

# This example uses YAML anchors which allows reuse of multiple keys without having to repeat yourself.
# REF;https://github.com/nix-community/infra/blob/428dc48b4b08c7b02a9512b0c60b84d30c6acce0/.sops.yaml
keys:
  # ERROR; Age's extension for Yubikey derived age-keys is not yet merged into sops!
  # REF; https://github.com/getsops/sops/pull/1465
  #- &yubikey_bert_proesmans age1yubikey1...
  - &development age13s286le0puqz79e96zkpxw9pwuv9jqvgptd4k2j0n257jvgpp5qs75nejw
  # HOST KEYS
  - &host_buddy age14an6m226h8vu06nv5q83s7vl59ytq8j9dkaujvrwgsdj98kr0ukq0a5k0g

# NOTE; These rules are in effect when using the SOPS CLI.
# Both creation of- and running the command updatekeys will modify the key material of files with sensitive content.
#
# WARN; Creation rules are interpreted sequentially, and a first match is used to calculate/provide key material
# to the file argument.
creation_rules:
  - path_regex: hosts/[^/]+/keys\.encrypted\.yaml$
    key_groups:
      # NOTE; A single key group comprised of 2 different types of encryption keys/methods
      # By default, to decrypt, at least one decryption key for _each_ keygroup must be present to decrypt secrets.
      # Since there is exactly one keygroup, any key within can fully decrypt the secrets
      - age:
        #- *yubikey_bert_proesmans
          - *development

  - path_regex: hosts/buddy/[^/]+\.encrypted\.yaml$
    key_groups:
      - age:
          - *host_buddy
          - *development
  
  # NOTE; No path_regex as fallback option
  #
  # WARN; Use `invoke update-sops-files` after updating key assignment to secret files!
  - key_groups:
      - age:
        #- *yubikey_bert_proesmans
          - *development